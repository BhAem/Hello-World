#include <stdio.h>
#include <math.h>
int main()
{
	int m, i, k;
 
	printf("请输入一个正整数：");
	scanf("%d", &m);                          //输入一个正整数
 
	k = sqrt(m);
 
	for (i = 2; i <= k; i++)                  //穷举m的可能因子，何时循环结束？
	{
		if (m % i == 0)                       //找到了整数m的一个因子i
		break;
	}                            //结束循环
 
	if (i > k)
		printf("此正整数为一个素数！\n");
	else
		printf("此正整数不是一个素数！\n");
 
 
	return 0;
}



效率最高的是 快速线性筛法
#include <stdio.h>
#define N 100
int main()
{
    int prime [N]={0},num=0;
    int isNotPrime[N]={1,1};
    for(int i=2;i<N;i++)
    {
        if(!isNotPrime[i])
            prime[num++]=i;
        for(int j=0;j<num&&i*prime[j]<N;j++)
        {
            isNotPrime[i*prime[j]]=1;
            if(!(i%prime[j]))
              break;
        }
    }
    return 0;
}

或者更大的数
#include<iostream>  
using namespace std;      
const long N = 200000;     
long prime[N] = {0},num_prime = 0;      
int isNotPrime[N] = {1, 1};     
int main()      
{       
        for(long i = 2 ; i < N ; i ++)         
        {              
        if(! isNotPrime[i])                 
            prime[num_prime ++]=i;    
        //关键处1          
        for(long j = 0 ; j < num_prime && i * prime[j] <  N ; j ++)  
            {                 
                isNotPrime[i * prime[j]] = 1;    
            if( !(i % prime[j] ) )  //关键处2                    
                break;             
        }          
    }          
    return 0;     
}    
